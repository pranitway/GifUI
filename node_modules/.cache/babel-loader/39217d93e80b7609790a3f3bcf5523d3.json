{"ast":null,"code":"var _jsxFileName = \"E:\\\\Study\\\\Course Study\\\\Jspider\\\\ReactJS Project\\\\gif-postui\\\\src\\\\components\\\\Gif.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gif extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      searchTxt: \"\",\n      gifPosts: []\n    };\n\n    this.handleSearch = event => {\n      this.setState({\n        searchTxt: event.target.value\n      });\n    };\n  }\n\n  async componentDidMount() {// axios return promise object, so we have to use await to wait for the operation to complete means promise to be resolved, and after that execute the remaining instruction\n    // const apiEndPoint = `https://api.giphy.com/v1/gifs/search?api_key=q0oOTdSJ8s8kiwFMMOsvd5A8CXkwXxv1&q=${this.state.searchTxt}&limit=10&offset=0&rating=g&lang=en`;\n    // let { data: posts } = await fetch(apiEndPoint);\n    // posts = await posts.json();\n    // console.log(\"fetchApi\", posts);\n    // this.setState({ gifPosts: posts });\n  }\n\n  render() {\n    let {\n      handleGifSearch\n    } = this.props;\n    console.log(\"Posts: \", this.state.gifPosts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control w-75\",\n        placeholder: \"Search...\" // onChange={handleGifSearch}\n        ,\n        onChange: this.handleSearch // value={value}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Gif;","map":{"version":3,"names":["React","Component","axios","Gif","state","searchTxt","gifPosts","handleSearch","event","setState","target","value","componentDidMount","render","handleGifSearch","props","console","log"],"sources":["E:/Study/Course Study/Jspider/ReactJS Project/gif-postui/src/components/Gif.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Gif extends Component {\r\n    state = {\r\n        searchTxt: \"\",\r\n        gifPosts: [],\r\n    };\r\n\r\n    async componentDidMount() {\r\n        // axios return promise object, so we have to use await to wait for the operation to complete means promise to be resolved, and after that execute the remaining instruction\r\n        // const apiEndPoint = `https://api.giphy.com/v1/gifs/search?api_key=q0oOTdSJ8s8kiwFMMOsvd5A8CXkwXxv1&q=${this.state.searchTxt}&limit=10&offset=0&rating=g&lang=en`;\r\n        // let { data: posts } = await fetch(apiEndPoint);\r\n        // posts = await posts.json();\r\n        // console.log(\"fetchApi\", posts);\r\n        // this.setState({ gifPosts: posts });\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        this.setState({ searchTxt: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        let { handleGifSearch } = this.props;\r\n        console.log(\"Posts: \", this.state.gifPosts);\r\n        return (\r\n            <div className=\"\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control w-75\"\r\n                    placeholder=\"Search...\"\r\n                    // onChange={handleGifSearch}\r\n                    onChange={this.handleSearch}\r\n                    // value={value}\r\n                ></input>\r\n                <button className=\"btn btn-primary\">Search</button>\r\n                <div className=\"d-flex\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gif;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAAA;IAAA;IAAA,KACxBG,KADwB,GAChB;MACJC,SAAS,EAAE,EADP;MAEJC,QAAQ,EAAE;IAFN,CADgB;;IAAA,KAexBC,YAfwB,GAeRC,KAAD,IAAW;MACtB,KAAKC,QAAL,CAAc;QAAEJ,SAAS,EAAEG,KAAK,CAACE,MAAN,CAAaC;MAA1B,CAAd;IACH,CAjBuB;EAAA;;EAMD,MAAjBC,iBAAiB,GAAG,CACtB;IACA;IACA;IACA;IACA;IACA;EACH;;EAMDC,MAAM,GAAG;IACL,IAAI;MAAEC;IAAF,IAAsB,KAAKC,KAA/B;IACAC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKb,KAAL,CAAWE,QAAlC;IACA,oBACI;MAAK,SAAS,EAAC,EAAf;MAAA,wBACI;QACI,IAAI,EAAC,MADT;QAEI,SAAS,EAAC,mBAFd;QAGI,WAAW,EAAC,WAHhB,CAII;QAJJ;QAKI,QAAQ,EAAE,KAAKC,YALnB,CAMI;;MANJ;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAQ,SAAS,EAAC,iBAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ,eAUI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAcH;;AApCuB;;AAuC5B,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}