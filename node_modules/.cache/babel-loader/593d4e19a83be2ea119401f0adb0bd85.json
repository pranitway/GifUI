{"ast":null,"code":"var _jsxFileName = \"E:\\\\Study\\\\Course Study\\\\Jspider\\\\ReactJS Project\\\\gif-postui\\\\src\\\\components\\\\Gif.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gif extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      searchTxt: \"\",\n      gifPosts: []\n    };\n\n    this.handleSearch = event => {\n      this.setState({\n        searchTxt: event.target.value\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // axios return promise object, so we have to use await to wait for the operation to complete means promise to be resolved, and after that execute the remaining instruction\n    if (this.state.searchTxt.length > 3) {\n      const apiEndPoint = `https://api.giphy.com/v1/gifs/search?api_key=q0oOTdSJ8s8kiwFMMOsvd5A8CXkwXxv1&q=${this.state.searchTxt}&limit=10&offset=0&rating=g&lang=en`;\n      let {\n        data: posts\n      } = await fetch(apiEndPoint).then(obj => {});\n      console.log(\"fetchApi\", obj);\n      this.setState({\n        gifPosts: posts\n      });\n    }\n  }\n\n  render() {\n    let {\n      handleGifSearch\n    } = this.props;\n    console.log(\"Posts: \", this.state.gifPosts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Search...\" // onChange={handleGifSearch}\n        ,\n        onChange: this.handleSearch // value={value}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Gif;","map":{"version":3,"names":["React","Component","axios","Gif","state","searchTxt","gifPosts","handleSearch","event","setState","target","value","componentDidMount","length","apiEndPoint","data","posts","fetch","then","obj","console","log","render","handleGifSearch","props"],"sources":["E:/Study/Course Study/Jspider/ReactJS Project/gif-postui/src/components/Gif.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Gif extends Component {\r\n    state = {\r\n        searchTxt: \"\",\r\n        gifPosts: [],\r\n    };\r\n\r\n    async componentDidMount() {\r\n        // axios return promise object, so we have to use await to wait for the operation to complete means promise to be resolved, and after that execute the remaining instruction\r\n        if (this.state.searchTxt.length > 3) {\r\n            const apiEndPoint = `https://api.giphy.com/v1/gifs/search?api_key=q0oOTdSJ8s8kiwFMMOsvd5A8CXkwXxv1&q=${this.state.searchTxt}&limit=10&offset=0&rating=g&lang=en`;\r\n\r\n            let { data: posts } = await fetch(apiEndPoint).then((obj) => {});\r\n            console.log(\"fetchApi\", obj);\r\n\r\n            this.setState({ gifPosts: posts });\r\n        }\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        this.setState({ searchTxt: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        let { handleGifSearch } = this.props;\r\n        console.log(\"Posts: \", this.state.gifPosts);\r\n        return (\r\n            <div className=\"\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                    // onChange={handleGifSearch}\r\n                    onChange={this.handleSearch}\r\n                    // value={value}\r\n                ></input>\r\n                <div className=\"d-flex\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gif;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAAA;IAAA;IAAA,KACxBG,KADwB,GAChB;MACJC,SAAS,EAAE,EADP;MAEJC,QAAQ,EAAE;IAFN,CADgB;;IAAA,KAkBxBC,YAlBwB,GAkBRC,KAAD,IAAW;MACtB,KAAKC,QAAL,CAAc;QAAEJ,SAAS,EAAEG,KAAK,CAACE,MAAN,CAAaC;MAA1B,CAAd;IACH,CApBuB;EAAA;;EAMD,MAAjBC,iBAAiB,GAAG;IACtB;IACA,IAAI,KAAKR,KAAL,CAAWC,SAAX,CAAqBQ,MAArB,GAA8B,CAAlC,EAAqC;MACjC,MAAMC,WAAW,GAAI,mFAAkF,KAAKV,KAAL,CAAWC,SAAU,qCAA5H;MAEA,IAAI;QAAEU,IAAI,EAAEC;MAAR,IAAkB,MAAMC,KAAK,CAACH,WAAD,CAAL,CAAmBI,IAAnB,CAAyBC,GAAD,IAAS,CAAE,CAAnC,CAA5B;MACAC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB;MAEA,KAAKV,QAAL,CAAc;QAAEH,QAAQ,EAAEU;MAAZ,CAAd;IACH;EACJ;;EAMDM,MAAM,GAAG;IACL,IAAI;MAAEC;IAAF,IAAsB,KAAKC,KAA/B;IACAJ,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKjB,KAAL,CAAWE,QAAlC;IACA,oBACI;MAAK,SAAS,EAAC,EAAf;MAAA,wBACI;QACI,IAAI,EAAC,MADT;QAEI,SAAS,EAAC,cAFd;QAGI,WAAW,EAAC,WAHhB,CAII;QAJJ;QAKI,QAAQ,EAAE,KAAKC,YALnB,CAMI;;MANJ;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAaH;;AAtCuB;;AAyC5B,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}