{"ast":null,"code":"var _jsxFileName = \"E:\\\\Study\\\\Course Study\\\\Jspider\\\\ReactJS Project\\\\gif-postui\\\\src\\\\components\\\\Gif.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gif extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      searchTxt: \"\",\n      gifPosts: []\n    };\n\n    this.handleSearch = event => {\n      this.setState({\n        searchTxt: event.target.value\n      });\n    };\n\n    this.renderImages = () => {\n      return this.state.gifPosts.map(links => {\n        let srcLink = `https://giphy.com/embed/${links.id}`;\n        console.log(links.url);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: links.id,\n          children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: srcLink,\n            srcLink: true,\n            width: \"200\",\n            height: \"200\",\n            frameBorder: \"0\",\n            className: \"giphy-embed\",\n            allowFullScreen: true,\n            title: links.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: links.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this);\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // axios return promise object, so we have to use await to wait for the operation to complete means promise to be resolved, and after that execute the remaining instruction\n    const apiEndPoint = `https://api.giphy.com/v1/gifs/search?api_key=q0oOTdSJ8s8kiwFMMOsvd5A8CXkwXxv1&q=${this.state.searchTxt}&limit=10&offset=0&rating=g&lang=en`;\n    console.log(apiEndPoint);\n    await fetch(apiEndPoint).then(response => {\n      return response.json();\n    }).then(response => {\n      console.log(\"fetchApi\", response);\n      this.setState({\n        gifPosts: response.data\n      });\n    });\n  }\n\n  render() {\n    let {\n      handleGifSearch\n    } = this.props;\n    console.log(\"Posts: \", this.state.gifPosts);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search...\" // onChange={handleGifSearch}\n          ,\n          onChange: this.handleSearch // value={value}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: this.onSearchClick,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-start\",\n        children: this.state.gifPosts.length !== 0 ? this.renderImages() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Gif;","map":{"version":3,"names":["React","Component","axios","Gif","state","searchTxt","gifPosts","handleSearch","event","setState","target","value","renderImages","map","links","srcLink","id","console","log","url","componentDidMount","apiEndPoint","fetch","then","response","json","data","render","handleGifSearch","props","onSearchClick","length"],"sources":["E:/Study/Course Study/Jspider/ReactJS Project/gif-postui/src/components/Gif.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Gif extends Component {\r\n    state = {\r\n        searchTxt: \"\",\r\n        gifPosts: [],\r\n    };\r\n\r\n    async componentDidMount() {\r\n        // axios return promise object, so we have to use await to wait for the operation to complete means promise to be resolved, and after that execute the remaining instruction\r\n        const apiEndPoint = `https://api.giphy.com/v1/gifs/search?api_key=q0oOTdSJ8s8kiwFMMOsvd5A8CXkwXxv1&q=${this.state.searchTxt}&limit=10&offset=0&rating=g&lang=en`;\r\n        console.log(apiEndPoint);\r\n        await fetch(apiEndPoint)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((response) => {\r\n                console.log(\"fetchApi\", response);\r\n                this.setState({ gifPosts: response.data });\r\n            });\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        this.setState({ searchTxt: event.target.value });\r\n    };\r\n\r\n    // onSearchClick = async () => {\r\n    //     // let txt = this.state.searchTxt\r\n    //     const apiEndPoint = `https://api.giphy.com/v1/gifs/search?api_key=q0oOTdSJ8s8kiwFMMOsvd5A8CXkwXxv1&q=${this.state.searchTxt}&limit=10&offset=0&rating=g&lang=en`;\r\n    //     console.log(apiEndPoint);\r\n    //     await fetch(apiEndPoint)\r\n    //         .then((response) => {\r\n    //             return response.json();\r\n    //         })\r\n    //         .then((response) => {\r\n    //             console.log(\"fetchApi\", response);\r\n    //             this.setState({ gifPosts: response.data });\r\n    //         });\r\n    // };\r\n\r\n    renderImages = () => {\r\n        return this.state.gifPosts.map((links) => {\r\n            let srcLink = `https://giphy.com/embed/${links.id}`;\r\n            console.log(links.url);\r\n            return (\r\n                <div className={links.id}>\r\n                    <iframe\r\n                        src={srcLink}\r\n                        srcLink\r\n                        width=\"200\"\r\n                        height=\"200\"\r\n                        frameBorder=\"0\"\r\n                        className=\"giphy-embed\"\r\n                        allowFullScreen\r\n                        title={links.id}\r\n                    ></iframe>\r\n                    <p>\r\n                        <a href={links.url}></a>\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { handleGifSearch } = this.props;\r\n\r\n        console.log(\"Posts: \", this.state.gifPosts);\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"d-flex\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search...\"\r\n                        // onChange={handleGifSearch}\r\n                        onChange={this.handleSearch}\r\n                        // value={value}\r\n                    ></input>\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={this.onSearchClick}\r\n                    >\r\n                        Search\r\n                    </button>\r\n                </div>\r\n                <div className=\"d-flex justify-content-start\">\r\n                    {this.state.gifPosts.length !== 0\r\n                        ? this.renderImages()\r\n                        : null}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gif;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAAA;IAAA;IAAA,KACxBG,KADwB,GAChB;MACJC,SAAS,EAAE,EADP;MAEJC,QAAQ,EAAE;IAFN,CADgB;;IAAA,KAoBxBC,YApBwB,GAoBRC,KAAD,IAAW;MACtB,KAAKC,QAAL,CAAc;QAAEJ,SAAS,EAAEG,KAAK,CAACE,MAAN,CAAaC;MAA1B,CAAd;IACH,CAtBuB;;IAAA,KAsCxBC,YAtCwB,GAsCT,MAAM;MACjB,OAAO,KAAKR,KAAL,CAAWE,QAAX,CAAoBO,GAApB,CAAyBC,KAAD,IAAW;QACtC,IAAIC,OAAO,GAAI,2BAA0BD,KAAK,CAACE,EAAG,EAAlD;QACAC,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,GAAlB;QACA,oBACI;UAAK,SAAS,EAAEL,KAAK,CAACE,EAAtB;UAAA,wBACI;YACI,GAAG,EAAED,OADT;YAEI,OAAO,MAFX;YAGI,KAAK,EAAC,KAHV;YAII,MAAM,EAAC,KAJX;YAKI,WAAW,EAAC,GALhB;YAMI,SAAS,EAAC,aANd;YAOI,eAAe,MAPnB;YAQI,KAAK,EAAED,KAAK,CAACE;UARjB;YAAA;YAAA;YAAA;UAAA,QADJ,eAWI;YAAA,uBACI;cAAG,IAAI,EAAEF,KAAK,CAACK;YAAf;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAXJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ;MAiBH,CApBM,CAAP;IAqBH,CA5DuB;EAAA;;EAMD,MAAjBC,iBAAiB,GAAG;IACtB;IACA,MAAMC,WAAW,GAAI,mFAAkF,KAAKjB,KAAL,CAAWC,SAAU,qCAA5H;IACAY,OAAO,CAACC,GAAR,CAAYG,WAAZ;IACA,MAAMC,KAAK,CAACD,WAAD,CAAL,CACDE,IADC,CACKC,QAAD,IAAc;MAChB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACH,CAHC,EAIDF,IAJC,CAIKC,QAAD,IAAc;MAChBP,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,QAAxB;MACA,KAAKf,QAAL,CAAc;QAAEH,QAAQ,EAAEkB,QAAQ,CAACE;MAArB,CAAd;IACH,CAPC,CAAN;EAQH;;EA4CDC,MAAM,GAAG;IACL,IAAI;MAAEC;IAAF,IAAsB,KAAKC,KAA/B;IAEAZ,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKd,KAAL,CAAWE,QAAlC;IACA,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,wBACI;QAAK,SAAS,EAAC,QAAf;QAAA,wBACI;UACI,IAAI,EAAC,MADT;UAEI,SAAS,EAAC,cAFd;UAGI,WAAW,EAAC,WAHhB,CAII;UAJJ;UAKI,QAAQ,EAAE,KAAKC,YALnB,CAMI;;QANJ;UAAA;UAAA;UAAA;QAAA,QADJ,eASI;UACI,SAAS,EAAC,iBADd;UAEI,IAAI,EAAC,QAFT;UAGI,OAAO,EAAE,KAAKuB,aAHlB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAkBI;QAAK,SAAS,EAAC,8BAAf;QAAA,UACK,KAAK1B,KAAL,CAAWE,QAAX,CAAoByB,MAApB,KAA+B,CAA/B,GACK,KAAKnB,YAAL,EADL,GAEK;MAHV;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EA0BH;;AA5FuB;;AA+F5B,eAAeT,GAAf"},"metadata":{},"sourceType":"module"}