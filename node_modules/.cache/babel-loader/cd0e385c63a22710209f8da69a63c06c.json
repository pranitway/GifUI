{"ast":null,"code":"var _jsxFileName = \"E:\\\\Study\\\\Course Study\\\\Jspider\\\\ReactJS Project\\\\gif-postui\\\\src\\\\components\\\\Gif.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Gif extends Component {\n  async componentDidMount() {\n    // axios return promise object, so we have to use await to wait for the operation to complete means promise to be resolved, and after that execute the remaining instruction\n    let {\n      data: posts\n    } = await http.get(config.apiEndPoint).then(obj => {\n      console.log(obj);\n      return obj;\n    });\n    this.setState({\n      post: posts\n    });\n  }\n\n  render() {\n    let {\n      handleGifSearch\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Search...\",\n        onChange: handleGifSearch // value={value}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Gif;","map":{"version":3,"names":["React","Component","Gif","componentDidMount","data","posts","http","get","config","apiEndPoint","then","obj","console","log","setState","post","render","handleGifSearch","props"],"sources":["E:/Study/Course Study/Jspider/ReactJS Project/gif-postui/src/components/Gif.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Gif extends Component {\r\n    async componentDidMount() {\r\n        // axios return promise object, so we have to use await to wait for the operation to complete means promise to be resolved, and after that execute the remaining instruction\r\n        let { data: posts } = await http.get(config.apiEndPoint).then((obj) => {\r\n            console.log(obj);\r\n            return obj;\r\n        });\r\n\r\n        this.setState({ post: posts });\r\n    }\r\n\r\n    render() {\r\n        let { handleGifSearch } = this.props;\r\n        return (\r\n            <div className=\"\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={handleGifSearch}\r\n                    // value={value}\r\n                ></input>\r\n                <div className=\"d-flex\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Gif;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;EACD,MAAjBE,iBAAiB,GAAG;IACtB;IACA,IAAI;MAAEC,IAAI,EAAEC;IAAR,IAAkB,MAAMC,IAAI,CAACC,GAAL,CAASC,MAAM,CAACC,WAAhB,EAA6BC,IAA7B,CAAmCC,GAAD,IAAS;MACnEC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACA,OAAOA,GAAP;IACH,CAH2B,CAA5B;IAKA,KAAKG,QAAL,CAAc;MAAEC,IAAI,EAAEV;IAAR,CAAd;EACH;;EAEDW,MAAM,GAAG;IACL,IAAI;MAAEC;IAAF,IAAsB,KAAKC,KAA/B;IACA,oBACI;MAAK,SAAS,EAAC,EAAf;MAAA,wBACI;QACI,IAAI,EAAC,MADT;QAEI,SAAS,EAAC,cAFd;QAGI,WAAW,EAAC,WAHhB;QAII,QAAQ,EAAED,eAJd,CAKI;;MALJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAQI;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QARJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAYH;;AAzBuB;;AA4B5B,eAAef,GAAf"},"metadata":{},"sourceType":"module"}